name: Gradle Build

on:
  push:
    branches: [ "master" ]
    paths:
      - 'gradle/wrapper/**'
      - '**/*.gradle'
      - '**/*.java'
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened]
    paths:
      - 'gradle/wrapper/**'
      - '**/*.gradle'
      - '**/*.java'

permissions:
  contents: write
  pull-requests: write

jobs:
  check-changes:
    name: Check for file changes
    runs-on: ubuntu-latest
    outputs:
      java-changes: ${{ steps.filter.outputs.java }}
      build-changes: ${{ steps.filter.outputs.build }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            java:
              - '**/*.java'
            build:
              - 'gradle/wrapper/**'
              - '**/*.gradle'

  gradle-build:
    name: Build project with Gradle
    needs: check-changes
    if: ${{ needs.check-changes.outputs.java-changes == 'true' || needs.check-changes.outputs.build-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary-as-pr-comment: on-failure
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          dependency-graph: generate-and-submit
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run CI build
        run: ./gradlew build
      - name: Publish test coverage
        if: ${{ needs.check-changes.outputs.java-changes == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew jacocoTestReport sonar